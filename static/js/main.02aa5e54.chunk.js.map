{"version":3,"sources":["containers/home/home.module.css","containers/login/login.module.css","types.js","containers/home/index.js","actions/index.js","containers/login/index.js","containers/register/index.js","App.js","reportWebVitals.js","reducers/countReducers.js","reducers/todoReducer.js","reducers/signupReducer.js","reducers/loginReducer.js","reducers/index.js","store/configureStore.js","index.js"],"names":["module","exports","ADD_COUNT","ADD_TO_DO","ADD_TO_DO_SUCCESS","ADD_TO_DO_FAIL","REMOVE","REMOVE_SUCCESS","REMOVE_FAIL","SIGN_UP","LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","Home","prevProps","todoData","this","props","isLoading","console","log","delLoading","addSubmit","dropSubmit","inputVal","_inputEle","value","data","title","key","Date","now","addTodo","alert","removeData","className","classes","main","button","link","to","countData","onClick","addCount","dropCount","input","type","placeholder","ref","ele","container","map","list","listContainer","removeList","React","Component","mapDispatchToProps","num","payload","val","dispatch","setTimeout","error","connect","state","count","todo","remove","Login","useremail","_loginemail","userpassword","_loginpassword","signupData","check","email","password","pw","login","window","location","href","style","color","id","a","button_holder","btn","signup","Signup","first","last","_firstname","_lastname","_email","_password","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","countReducer","action","defaultState","todoReducer","filter","signupReducer","loginReducer","combineReducers","persistConfig","version","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.02aa5e54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__1-8EM\",\"main\":\"home_main__3BewD\",\"listContainer\":\"home_listContainer__22bAF\",\"list\":\"home_list__D5Qsf\",\"button\":\"home_button__2Sfbt\",\"input\":\"home_input__3hPLu\",\"link\":\"home_link__1xofw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__3FwS8\",\"login\":\"login_login__3tSy0\",\"signup\":\"login_signup__WgSSb\",\"input\":\"login_input__2tfWE\",\"btn\":\"login_btn__2_9_1\",\"link\":\"login_link__3aWJe\",\"button_holder\":\"login_button_holder__2Bf2A\"};","export const ADD_COUNT = 'ADD_COUNT';\r\nexport const DROP_COUNT = 'DROP_COUNT';\r\n\r\nexport const ADD_TO_DO = 'SEARCH';\r\nexport const ADD_TO_DO_SUCCESS = 'ADD_TO_DO_SUCCESS';\r\nexport const ADD_TO_DO_FAIL = 'ADD_TO_DO_FAIL';\r\n\r\nexport const REMOVE = 'REMOVE';\r\nexport const REMOVE_SUCCESS = 'REMOVE_TO_DO_SUCCESS';\r\nexport const REMOVE_FAIL = 'REMOVE_TO_DO_FAIL';\r\n\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\n// export const RESET_TO_DO = 'RESET_TO_DO';","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {addSubmit, addTodo, dropSubmit, remove} from '../../actions';\r\nimport classes from './home.module.css';\r\n\r\nclass Home extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     // console.log('count data', this.props.countData);\r\n    // }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        //check previous state\r\n        const{todoData} = this.props;\r\n\r\n        // check if todoData.isLoading == false && todoData.isLoading == true\r\n        if(prevProps.todoData.isLoading && !todoData.isLoading) {\r\n            console.log('Data is updated!');\r\n            // alert(\"The data has been updated\");\r\n        }\r\n        if(prevProps.todoData.delLoading && !todoData.delLoading) {\r\n            console.log('Data is deleted!');\r\n            // alert(\"The data has been updated\");delLoading\r\n        }\r\n    }\r\n\r\n    addCount() {\r\n        this.props.addSubmit(2);\r\n    }\r\n    dropCount() {\r\n        this.props.dropSubmit(-2);\r\n    }\r\n\r\n    addTodo() {\r\n        const inputVal = this._inputEle.value;\r\n        if(inputVal !== \"\") {\r\n            const data = {\r\n                title: inputVal,\r\n                key: Date.now(),\r\n            }\r\n            this.props.addTodo(data);\r\n            this._inputEle.value = '';\r\n        } else {\r\n            alert('No data has been inserted');\r\n        }\r\n        \r\n    }\r\n\r\n    removeList(key) {\r\n        // console.log(key);\r\n        this.props.removeData(key);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.main}>\r\n                <button className={classes.button}>\r\n                    <Link className={classes.link} to=\"/\">Log out</Link>\r\n                </button>\r\n                <h1>This is home</h1>\r\n                <h1>Count: {this.props.countData}</h1>\r\n                <div>\r\n                    <button className={classes.button} onClick={() => this.addCount()}>Plus 2</button>\r\n                    <button className={classes.button} onClick={() => this.dropCount()}>Minus 2</button>\r\n                </div>\r\n                <input className={classes.input} type=\"text\" placeholder=\"Add to do\" ref={(ele) => this._inputEle = ele } />\r\n                {\r\n                    this.props.todoData.isLoading ? (\r\n                        <p>Loading...</p>\r\n                    ) : (\r\n                        <button className={classes.button} onClick={() => this.addTodo()}>Add</button>\r\n                    )\r\n                }\r\n                \r\n                {/* if we use {} its like we're calling js instead of passing parameter */}\r\n                <div>\r\n                    <ul className={classes.container}>\r\n                        {this.props.todoData.data.map((list) => (\r\n                            <div className={classes.listContainer}>\r\n                                <li className={classes.list} >{list.title}</li>\r\n                                {\r\n                                    this.props.todoData.delLoading ? (\r\n                                        <p>Deleting...</p>\r\n                                    ) : (\r\n                                        <div >\r\n                                            {/* <li style={styles.list}>{list.title}</li> */}\r\n                                            <button onClick={()=>this.removeList(list.key)}>Remove</button>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                {/* <li style={styles.list}>{list.title}</li>\r\n                                <button onClick={()=>this.removeList(list.key)}>Remove</button> */}\r\n                            </div>\r\n                        ))}\r\n                    </ul>\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//getting the state from the store\r\nconst mapStateToProps = (state) => ({\r\n    countData: state.count,\r\n    todoData: state.todo,\r\n    removeData: state.remove,\r\n});\r\nconst mapDispatchToProps = {\r\n    addSubmit: addSubmit,\r\n    dropSubmit: dropSubmit,\r\n    addTodo: addTodo,\r\n    removeData: remove,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as type from '../types';\r\n\r\nexport const signup = (data) => {\r\n    return {\r\n        type: type.SIGN_UP,\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const login = (data) => (dispatch) =>{\r\n    try{\r\n        dispatch ({\r\n            type: type.LOGIN,\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: type.LOGIN_SUCCESS,\r\n                payload: data,\r\n            })\r\n        }, 3000);\r\n    }\r\n    catch (error){\r\n        dispatch({\r\n            type: type.LOGIN_FAIL,\r\n            error: error,\r\n        })\r\n    }\r\n    // return {\r\n    //     type: type.LOGIN,\r\n    //     payload: data,\r\n    // }\r\n}\r\n\r\nexport const addSubmit = (num) => {\r\n    return {\r\n        type: 'ADD_COUNT',\r\n        payload: num,\r\n    }\r\n}\r\n\r\nexport const dropSubmit = (num) => {\r\n    return {\r\n        type: type.DROP_COUNT,\r\n        payload: num,\r\n    }\r\n}\r\n\r\nexport const addTodo = (val) => (dispatch) => {\r\n    try{\r\n        dispatch ({\r\n            type: type.ADD_TO_DO,\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: type.ADD_TO_DO_SUCCESS,\r\n                payload: val,\r\n            })\r\n        }, 3000);\r\n    }\r\n    catch (error){\r\n        dispatch({\r\n            type: type.ADD_TO_DO_FAIL,\r\n            error: error,\r\n        })\r\n    }\r\n    // return {\r\n    //     type: 'SEARCH',\r\n    //     payload: val,\r\n    // }\r\n}\r\n\r\nexport const remove = (key) => (dispatch) => {\r\n    try{\r\n        dispatch ({\r\n            type: type.REMOVE,\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: type.REMOVE_SUCCESS,\r\n                payload: key,\r\n            })\r\n        }, 3000);\r\n    }\r\n    catch (error){\r\n        dispatch({\r\n            type: type.REMOVE_FAIL,\r\n            error: error,\r\n        })\r\n    }\r\n    // return {\r\n    //     type: 'REMOVE',\r\n    //     payload: key,\r\n    // }\r\n}","import React from 'react';\r\nimport classes from './login.module.css'; \r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../actions';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    login() {\r\n        const useremail = this._loginemail.value;\r\n        const userpassword = this._loginpassword.value;\r\n        if(useremail !== \"\" || userpassword !== \"\") {\r\n            this.props.signupData.data.map((check)=> {\r\n                // console.log('hello');\r\n                // const data = {\r\n                //     email: useremail,\r\n                //     pw: userpassword\r\n                // }\r\n                // this.props.login(data);\r\n                // // this._loginemail.value = '';\r\n                // // this._loginpassword.value = '';\r\n                // window.location.href = \"http://localhost:3000/home\";\r\n                if(useremail === check.email && userpassword === check.password){\r\n                    const data = {\r\n                        email: useremail,\r\n                        pw: userpassword\r\n                    }\r\n                    this.props.login(data);\r\n                    // this._loginemail.value = '';\r\n                    // this._loginpassword.value = '';\r\n                    window.location.href = \"http://localhost:3000/home\";\r\n                } else {\r\n                    alert('Your credentials dont match');\r\n                }\r\n            })\r\n        } else {\r\n            alert('Please fill in all the details');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.container}>\r\n                <div className={classes.login}>\r\n                    <h1 style={{color:`#154c79`}}>Log In</h1>\r\n                    <p>Please fill in the details to view the dashboard..</p>\r\n                    <input className={classes.input} type=\"text\" id=\"email\" placeholder=\"email\" ref={(a)=> this._loginemail = a} />\r\n                    <input className={classes.input} type=\"text\" id=\"password\" placeholder=\"password\" ref={(a)=> this._loginpassword = a} />\r\n                    <div className={classes.button_holder}>\r\n                        {\r\n                            this.props.signupData.isLoading ? (\r\n                                <p>Directing to Dashboard...</p>\r\n                            ) : (\r\n                                <button className={classes.btn} onClick={()=> this.login()}>Login</button>\r\n                            )\r\n                        }\r\n                        \r\n                        <button className={classes.btn} >\r\n                            <Link className={classes.link} to=\"/register\">Register</Link>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    signupData: state.signup,\r\n    // loginData: state.login,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    login: login,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport classes from  '../login/login.module.css';\r\nimport {connect} from 'react-redux';\r\nimport {signup} from '../../actions';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            first: \"\",\r\n            last: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n    signup(){\r\n        let first = this._firstname.value;\r\n        let last = this._lastname.value;\r\n        let email = this._email.value;\r\n        let password = this._password.value;\r\n        if(email !== \"\" || password !== \"\" || first !== \"\" || last !== \"\") {\r\n            const data = {\r\n                first: first,\r\n                last: last,\r\n                email: email,\r\n                password: password\r\n            }\r\n            this.props.signup(data);\r\n\r\n            <Link to=\"/\"></Link> \r\n            window.location.href = \"http://localhost:3000\";\r\n            // this.props.signupData.data.map((check)=> {\r\n            //     if(email !== check.email) {\r\n            //         const data = {\r\n            //             first: first,\r\n            //             last: last,\r\n            //             email: email,\r\n            //             password: password\r\n            //         }\r\n            //         this.props.signup(data);\r\n\r\n            //         window.location.href = \"http://localhost:3000\";\r\n            //     } else {\r\n            //         alert (\"This email has been registered\");\r\n            //     }\r\n            // })\r\n        } else {\r\n            alert('Please fill in all the details');\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <div className={classes.container}>\r\n                <div className={classes.signup}>\r\n                    <h1 style={{color:`#154c79`}}>Sign Up</h1>\r\n                    <p>Please sign up</p>\r\n                    <input className={classes.input} type=\"text\" id=\"first\" placeholder=\"first name\" ref={(a)=> this._firstname = a} />\r\n                    <input className={classes.input} type=\"text\" id=\"last\" placeholder=\"last name\" ref={(a)=> this._lastname = a} />\r\n                    <input className={classes.input} type=\"text\" id=\"email\" placeholder=\"email\" ref={(a)=> this._email = a} />\r\n                    <input className={classes.input} type=\"text\" id=\"password\" placeholder=\"password\" ref={(a)=> this._password = a}/>\r\n                    <button className={classes.btn} onClick={() => this.signup()}>Register\r\n                        {/* <Link className={classes.link} to=\"/\">Register</Link> */}\r\n                    </button>\r\n                    <button className={classes.btn} >\r\n                        <Link className={classes.link} to=\"/\">Cancel</Link>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    signupData: state.signup.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    signup: signup,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import Home from './containers/home';\nimport Login from './containers/login';\nimport Signup from './containers/register';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/register\" component={Signup} />\n        <Route exact path=\"/\" component={Login} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as type from '../types';\r\n\r\nconst countReducer = (state = 0, action) => {\r\n    switch(action.type) {\r\n        case type.ADD_COUNT:\r\n            return state += action.payload;\r\n        case 'DROP_COUNT':\r\n            return state += action.payload;\r\n            // return state -= 1; //if we dont have payload\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default countReducer;\r\n","import * as type from '../types';\r\n\r\nconst defaultState = {\r\n    isLoading: false,\r\n    data: [],\r\n    error: null,\r\n};\r\n\r\n//changing the state(which is set as empty array as default in this case), then the action will change the current state\r\nconst todoReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case type.ADD_TO_DO:\r\n            return {\r\n                isLoading: true,\r\n                data: [...state.data],\r\n                error: null,\r\n            };\r\n            // [...state, action.payload]\r\n        case type.ADD_TO_DO_SUCCESS:\r\n            return{\r\n                isLoading: false,\r\n                data: [...state.data, action.payload],\r\n                error: null,\r\n            }\r\n        case type.ADD_TO_DO_FAIL:\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data],\r\n                error: action.error,\r\n            }    \r\n        // case type.REMOVE:\r\n        //     console.log(state);\r\n        //     return [...state].filter((ele) => ele.key !== action.payload);\r\n            \r\n        case type.REMOVE:\r\n            // console.log(state);\r\n            return {\r\n                delLoading: true,\r\n                data: [...state.data],\r\n                error: null,\r\n            };\r\n        case type.REMOVE_SUCCESS:\r\n            return{\r\n                delLoading: false,\r\n                data: [...state.data].filter((ele) => ele.key !== action.payload),\r\n                error: null,\r\n            }\r\n        case type.REMOVE_FAIL:\r\n            return {\r\n                delLoading: false,\r\n                data: [...state.data],\r\n                error: action.error,\r\n            }  \r\n        default:\r\n            return defaultState;\r\n    }\r\n}\r\n\r\nexport default todoReducer;","import * as type from '../types';\r\n\r\nconst defaultState = {\r\n    data: []\r\n}\r\n\r\nconst signupReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case type.SIGN_UP: \r\n            return {\r\n                data: [...state.data, action.payload]\r\n            } \r\n        default: \r\n            return defaultState;\r\n    }\r\n}\r\nexport default signupReducer;","import * as type from '../types';\r\n\r\nconst defaultState = {\r\n    isLoading: false,\r\n    data: [],\r\n    error: null\r\n}\r\n\r\nconst loginReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case type.LOGIN: \r\n            return {\r\n                isLoading: true,\r\n                data: [...state.data],\r\n                error: null\r\n            } \r\n        case type.LOGIN_SUCCESS: \r\n            return {\r\n                isLoading:false,\r\n                data: [...state.data, action.payload],\r\n                error: null\r\n            } \r\n        case type.LOGIN_FAIL: \r\n            return {\r\n                isLoading:false,\r\n                data: [...state.data],\r\n                error: action.error\r\n            } \r\n        default: \r\n            return defaultState;\r\n    }\r\n}\r\nexport default loginReducer;","import { combineReducers } from 'redux';\r\n\r\nimport countReducer from './countReducers';\r\nimport todoReducer from './todoReducer';\r\n// import removeReducer from './removeReducers';\r\nimport signupReducer from './signupReducer';\r\nimport loginReducer from './loginReducer';\r\n\r\nexport default combineReducers({\r\n    count: countReducer,\r\n    todo: todoReducer,\r\n    signup: signupReducer,\r\n    login: loginReducer,\r\n    // remove: removeReducer,\r\n})","import {configureStore} from '@reduxjs/toolkit';\r\n// import countReducer from '../reducers/countReducers';\r\n// import todoReducer from '../reducers/todoReducer';\r\n// import removeReducer from '../reducers/removeReducers';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist';\r\n  \r\nimport storage from 'redux-persist/lib/storage'; //so when we refresh it will cache in the storage\r\nimport rootReducer from '../reducers/index';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n      }),\r\n  })\r\n  \r\nlet persistor = persistStore(store);\r\n  \r\nexport {store, persistor};\r\n\r\n// export default configureStore({\r\n//     reducer: {\r\n//         count: countReducer,\r\n//         todo: todoReducer,\r\n//         // remove: removeReducer,\r\n//     },\r\n// })","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import store from './store';\nimport {Provider} from 'react-redux';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {store, persistor} from './store/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}